[{"C:\\personalprojects\\mahjong\\MahjongScoreCalculator\\frontend\\src\\index.js":"1","C:\\personalprojects\\mahjong\\MahjongScoreCalculator\\frontend\\src\\App.js":"2","C:\\personalprojects\\mahjong\\MahjongScoreCalculator\\frontend\\src\\reportWebVitals.js":"3","C:\\personalprojects\\mahjong\\MahjongScoreCalculator\\frontend\\src\\components\\Header.js":"4","C:\\personalprojects\\mahjong\\MahjongScoreCalculator\\frontend\\src\\components\\CurrentTiles.js":"5","C:\\personalprojects\\mahjong\\MahjongScoreCalculator\\frontend\\src\\css\\CurrentTiles.js":"6","C:\\personalprojects\\mahjong\\MahjongScoreCalculator\\frontend\\src\\components\\TileGrid.js":"7"},{"size":517,"mtime":1606987011487,"results":"8","hashOfConfig":"9"},{"size":325,"mtime":1606995676564,"results":"10","hashOfConfig":"9"},{"size":375,"mtime":1606987011489,"results":"11","hashOfConfig":"9"},{"size":477,"mtime":1606994708315,"results":"12","hashOfConfig":"9"},{"size":988,"mtime":1606997044885,"results":"13","hashOfConfig":"9"},{"size":0,"mtime":1606994899371,"results":"14","hashOfConfig":"9"},{"size":1797,"mtime":1606995676566,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1it8ijl",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},"C:\\personalprojects\\mahjong\\MahjongScoreCalculator\\frontend\\src\\index.js",[],["32","33"],"C:\\personalprojects\\mahjong\\MahjongScoreCalculator\\frontend\\src\\App.js",[],"C:\\personalprojects\\mahjong\\MahjongScoreCalculator\\frontend\\src\\reportWebVitals.js",[],"C:\\personalprojects\\mahjong\\MahjongScoreCalculator\\frontend\\src\\components\\Header.js",[],"C:\\personalprojects\\mahjong\\MahjongScoreCalculator\\frontend\\src\\components\\CurrentTiles.js",["34"],"C:\\personalprojects\\mahjong\\MahjongScoreCalculator\\frontend\\src\\css\\CurrentTiles.js",[],"C:\\personalprojects\\mahjong\\MahjongScoreCalculator\\frontend\\src\\components\\TileGrid.js",["35"],"import React from \"react\";\r\nimport { GridList, GridListTile, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    flexWrap: \"nowrap\",\r\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n    transform: \"translateZ(0)\",\r\n    imgFullHeight: \"true\",\r\n  },\r\n  title: {\r\n    color: theme.palette.primary.light,\r\n  },\r\n  titleBar: {\r\n    background:\r\n      \"linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)\",\r\n  },\r\n}));\r\n\r\n// Generates tilesData\r\n\r\nfunction populateTiles() {\r\n  const tilesData = [];\r\n  // var types = [\"bamboo\",\"tong\",\"wan\"]\r\n  var types = [\"tong\"];\r\n  types.forEach((element) => {\r\n    for (var i = 1; i <= 9; i++) {\r\n      var obj = {};\r\n      obj[\"img\"] = \"assets/\" + element + \"-\" + i + \".png\";\r\n      obj[\"id\"] = element + i;\r\n      tilesData.push(obj);\r\n    }\r\n  });\r\n  return tilesData;\r\n}\r\n\r\n\r\nexport default function TileGrid() {\r\n  const styles = useStyles;\r\n  var tilesData = populateTiles();\r\n  return (\r\n    <div>\r\n      <GridList cellHeight={180} cols={9} style={styles.gridList}>\r\n        {tilesData.map((tile, index) => (\r\n          <GridListTile>\r\n            key={tile.id}\r\n            cols={index % 9}\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={() => {\r\n                alert(tile.id);\r\n              }}\r\n            >\r\n              <img src={tile.img} />\r\n            </Button>\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n    </div>\r\n  );\r\n}\r\n\r\n",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":2,"column":10,"nodeType":"42","messageId":"43","endLine":2,"endColumn":19},{"ruleId":"44","severity":1,"message":"45","line":62,"column":15,"nodeType":"46","endLine":62,"endColumn":37},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]